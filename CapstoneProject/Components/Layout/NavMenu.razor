@using CapstoneProject.Components.Models
@inject DatabaseHelper DbHelper

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">CapstoneProject</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
    </nav>
</div>

<!-- Button to Check Database Connection -->
<div class="px-3 mt-3">
    <button class="btn btn-primary" @onclick="CheckDatabaseConnection">Check DB Connection</button>
    <p>@dbStatus</p>
</div>

@code {
    private string dbStatus = "Click to check DB connection";

    private async Task CheckDatabaseConnection()
    {
        // For debugging, log to console
        Console.WriteLine("Button clicked! Checking DB connection...");

        // Verify if DbHelper is injected
        if (DbHelper == null)
        {
            dbStatus = "Database Helper is not available.";
            StateHasChanged();
            return;
        }

        try
        {
            // Try to open a connection
            using var connection = DbHelper.GetConnection();
            await connection.OpenAsync();
            dbStatus = "Database Connection Successful ✅";
        }
        catch (Exception ex)
        {
            dbStatus = $"Connection Failed ❌: {ex.Message}";
        }

        // Trigger a UI update
        StateHasChanged();

        // Debugging message to ensure method is executed
        Console.WriteLine($"DB Status: {dbStatus}");
    }
}
}