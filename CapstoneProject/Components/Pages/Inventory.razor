@page "/inventory"
@using DataAccessLibrary
@using DataAccessLibrary.Model

@inject IProductData _db;

<PageTitle>Inventory</PageTitle>

<h1>Inventory</h1>

<p>This component demonstrates showing data.</p>

<h4>Current Inventory</h4>

@if(products is null)
{
    <p><em>Loading......</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                    <th>ProductID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>UnitPrice</th>
                    <th>QuantityAvaiable</th>
            </tr>
        </thead>
        <tbody>

            @foreach(var p in products)
            {
               <tr>
                   <td>@p.Product_id</td>
                   <td>@p.Name</td>
                   <td>@p.Description</td>
                   <td>@p.unit_price</td>
                   <td>@p.quantity_available</td>


               </tr>
                
            }
        </tbody>
    </table>

}


@code {
    // List inventory as a table with search bar, stock indicators, and update options

    private List<ProductModel> products;
    protected override async Task OnInitializedAsync()
    {
        products = await _db.GetProduct();
    }

}
